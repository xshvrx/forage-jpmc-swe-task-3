From 1520c585cf37cc654532bb2f0c3c9ef7219a71e3 Mon Sep 17 00:00:00 2001
From: xshvrx <shivpatel6192@gmail.com>
Date: Thu, 30 May 2024 16:18:42 -0400
Subject: [PATCH] task 3

---
 src/DataManipulator.ts | 32 +++++++++++++++++--------
 src/Graph.tsx          | 53 ++++++++++++++++++++++++++++--------------
 2 files changed, 58 insertions(+), 27 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..24c99e9 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,32 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
+  static generateRow(serverResponds: ServerRespond[]): Row {
+    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price)/2;
+    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price)/2;
+    const ratio = priceABC / priceDEF;
+    const upper_bound = 1 + 0.05;
+    const lower_bound = 1 - 0.05;
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ?
+        serverResponds[0].timestamp : serverResponds[1].timestamp,
+      upper_bound: upper_bound,
+      lower_bound: lower_bound,
+      trigger_alert: (ratio > upper_bound || ratio < lower_bound ) ? ratio : undefined,
+    };
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..6c3fa72 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table, TableData } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -23,10 +23,17 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      // stock: 'string',
+      // top_ask_price: 'float',
+      // top_bid_price: 'float',
+      // timestamp: 'date',
+      price_abc:'float',
+      price_def:'float',
+      ratio:'float',
       timestamp: 'date',
+      upper_bound:'float',
+      lower_bound:'float',
+      trigger_alert:'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -35,26 +42,38 @@ class Graph extends Component<IProps, {}> {
     if (this.table) {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
-      elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
-      elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
-      elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
-      }));
+    //   elem.setAttribute('view', 'y_line');
+    //   elem.setAttribute('column-pivots', '["stock"]');
+    //   elem.setAttribute('row-pivots', '["timestamp"]');
+    //   elem.setAttribute('columns', '["top_ask_price"]');
+    //   elem.setAttribute('aggregates', JSON.stringify({
+    //     stock: 'distinctcount',
+    //     top_ask_price: 'avg',
+    //     top_bid_price: 'avg',
+    //     timestamp: 'distinct count',
+    //   }));
+    elem.setAttribute('view', 'y_line');
+    elem.setAttribute('row-pivots', '["timestamp"]');
+    elem.setAttribute('columns', '["ratio","lower_bound","upper_bound","trigger_alert"]');
+    elem.setAttribute('aggregates', JSON.stringify({
+      price_abc:'avg',
+      price_def:'avg',
+      ratio:'avg',
+      timestamp: 'distinct count',
+      upper_bound:'avg',
+      lower_bound:'avg',
+      trigger_alert:'avg',
+    }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ] as unknown as TableData);
     }
   }
 }
 
-export default Graph;
+export default Graph;
\ No newline at end of file
-- 
2.45.1.windows.1

